Microchip MPLAB XC8 Compiler V1.35 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v1.35\dat\en_msgs.txt -cs \
  -h+dist/default/production\MAPPproject.X.production.sym \
  --cmf=dist/default/production\MAPPproject.X.production.cmf -z -Q18F4550 \
  -oC:\Users\sunda\AppData\Local\Temp\sfoc.2 \
  -Mdist/default/production/MAPPproject.X.production.map -E1 -ver=XC8 \
  -ASTACK=0A1h-07ffh -pstack=STACK -ACODE=01000h-07FFFh \
  -ACONST=01000h-07FFFh -ASMALLCONST=01000h-010FFhx112 \
  -AMEDIUMCONST=01000h-07FFFh -ACOMRAM=01h-05Fh -AABS1=00h-07FFh \
  -ABIGRAM=01h-07FFh -ARAM=060h-0FFh,0100h-01FFhx7 -ABANK0=060h-0FFh \
  -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh -ABANK3=0300h-03FFh \
  -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh -ABANK6=0600h-06FFh \
  -ABANK7=0700h-07FFh -ASFR=0F60h-0FFFh \
  -preset_vec=01000h,intcode,intcodelo,powerup,init,end_init -pramtop=0800h \
  -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST -pconst=CONST \
  -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\sunda\AppData\Local\Temp\sfoc.obj \
  dist/default/production\MAPPproject.X.production.obj 

Object code version is 3.11

Machine type is 18F4550

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\sunda\AppData\Local\Temp\sfoc.obj
                end_init                           1000     1000        4      800       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\MAPPproject.X.production.obj
                smallconst                         1004     1004       14      802       0
                text25                             6F5C     6F5C       22     37AE       0
                text24                             714C     714C       70     38A6       0
                text23                             74A6     74A6       94     3A53       0
                text22                             70B4     70B4       3C     385A       0
                text21                             6FA2     6FA2       34     37D1       0
                text20                             6FD6     6FD6       36     37EB       0
                text19                             71BC     71BC       72     38DE       0
                text18                             6F36     6F36        8     379B       0
                text17                             753A     753A       AE     3A9D       0
                text16                             7042     7042       38     3821       0
                text15                             7AD4     7AD4      1AC     3D6A       0
                text14                             76BC     76BC       E6     3B5E       0
                text13                             77A2     77A2       F4     3BD1       0
                text12                             7896     7896       F4     3C4B       0
                text11                             75E8     75E8       D4     3AF4       0
                text10                             700C     700C       36     3806       0
                text9                              70F0     70F0       5C     3878       0
                text8                              6F7E     6F7E       24     37BF       0
                text7                              722E     722E       78     3917       0
                text6                              72A6     72A6       78     3953       0
                text5                              7396     7396       82     39CB       0
                text4                              7418     7418       8E     3A0C       0
                text3                              7C80     7C80      380     3E40       0
                text2                              731E     731E       78     398F       0
                text1                              798A     798A      14A     3CC5       0
                text0                              6F3E     6F3E        8     379F       0
                cstackCOMRAM                          1        1       5F        1       1
                cstackBANK0                          60       60       23       60       1
                dataBANK0                            83       83       15       60       1
                bssBANK0                             98       98        9       60       1
                cinit                              707A     707A       3A     383D       0
                idataBANK0                         6F47     6F47       15     6F47       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                           1000     1000        4         0
                text25                             6F5C     6F5C       22         0
                text24                             714C     714C       70         0
                text23                             74A6     74A6       94         0
                text22                             70B4     70B4       3C         0
                text21                             6FA2     6FA2       34         0
                text20                             6FD6     6FD6       36         0
                text19                             71BC     71BC       72         0
                text18                             6F36     6F36        8         0
                text17                             753A     753A       AE         0
                text16                             7042     7042       38         0
                text15                             7AD4     7AD4      1AC         0
                text14                             76BC     76BC       E6         0
                text13                             77A2     77A2       F4         0
                text12                             7896     7896       F4         0
                text11                             75E8     75E8       D4         0
                text10                             700C     700C       36         0
                text9                              70F0     70F0       5C         0
                text8                              6F7E     6F7E       24         0
                text7                              722E     722E       78         0
                text6                              72A6     72A6       78         0
                text5                              7396     7396       82         0
                text4                              7418     7418       8E         0
                text3                              7C80     7C80      380         0
                text2                              731E     731E       78         0
                text1                              798A     798A      14A         0
                text0                              6F3E     6F3E        8         0
                cinit                              707A     707A       3A         0
                idataBANK0                         6F47     6F47       15         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                         1004     1004       14         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                cstackCOMRAM                          1        1       5F         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          60       60       23         1
                dataBANK0                            83       83       15         1
                bssBANK0                             98       98        9         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   BANK6          

        CLASS   BANK7          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                cstackCOMRAM                   000001  00005F  000060         1       1  COMRAM  
                cstackBANK0                    000060  000041  0000A1        60       1  BANK0   
                reset_vec                      001000  000004  001004       800       0  CODE    
                smallconst                     001004  000014  001018       802       0  SMALLCON
                text18                         006F36  000008  006F3E      379B       0  CODE    
                text0                          006F3E  000008  006F46      379F       0  CODE    
                idataBANK0                     006F47  000015  006F5C      6F47       0  CODE    
                text25                         006F5C  000022  006F7E      37AE       0  CODE    
                text8                          006F7E  000024  006FA2      37BF       0  CODE    
                text21                         006FA2  000034  006FD6      37D1       0  CODE    
                text20                         006FD6  000036  00700C      37EB       0  CODE    
                text10                         00700C  000036  007042      3806       0  CODE    
                text16                         007042  000038  00707A      3821       0  CODE    
                cinit                          00707A  00003A  0070B4      383D       0  CODE    
                text22                         0070B4  00003C  0070F0      385A       0  CODE    
                text9                          0070F0  00005C  00714C      3878       0  CODE    
                text24                         00714C  000070  0071BC      38A6       0  CODE    
                text19                         0071BC  000072  00722E      38DE       0  CODE    
                text7                          00722E  000078  0072A6      3917       0  CODE    
                text6                          0072A6  000078  00731E      3953       0  CODE    
                text2                          00731E  000078  007396      398F       0  CODE    
                text5                          007396  000082  007418      39CB       0  CODE    
                text4                          007418  00008E  0074A6      3A0C       0  CODE    
                text23                         0074A6  000094  00753A      3A53       0  CODE    
                text17                         00753A  0000AE  0075E8      3A9D       0  CODE    
                text11                         0075E8  0000D4  0076BC      3AF4       0  CODE    
                text14                         0076BC  0000E6  0077A2      3B5E       0  CODE    
                text13                         0077A2  0000F4  007896      3BD1       0  CODE    
                text12                         007896  0000F4  00798A      3C4B       0  CODE    
                text1                          00798A  00014A  007AD4      3CC5       0  CODE    
                text15                         007AD4  0001AC  007C80      3D6A       0  CODE    
                text3                          007C80  000380  008000      3E40       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0000A1-0000FF               5F
        BANK1            000100-0001FF              100
        BANK2            000200-0002FF              100
        BANK3            000300-0003FF              100
        BANK4            000400-0004FF              100
        BANK5            000500-0005FF              100
        BANK6            000600-0006FF              100
        BANK7            000700-0007FF              100
        BIGRAM           0000A1-0007FF              75F
        CODE             001018-006F35             5F1E
                         006F46-006F46                1
        CONST            001018-006F35             5F1E
                         006F46-006F46                1
        EEDATA           F00000-F000FF              100
        FARRAM           000000-000000                1
        MEDIUMCONST      001018-006F35             5F1E
                         006F46-006F46                1
        RAM              0000A1-0007FF              100
        SFR              000F60-000FFF               A0
        SMALLCONST       001018-006F35              100
                         006F46-006F46                1
        STACK            0000A1-0007FF              75F

                                  Symbol Table

?___altoft                     cstackCOMRAM 00003F
?___awtoft                     cstackCOMRAM 000009
?___ftadd                      cstackCOMRAM 000054
?___ftdiv                      cstackCOMRAM 000021
?___ftmul                      cstackCOMRAM 000012
?___ftneg                      cstackCOMRAM 000051
?___ftpack                     cstackCOMRAM 000001
?___fttol                      cstackCOMRAM 000030
?___lltoft                     cstackCOMRAM 000009
?_round                        cstackBANK0  000060
?_setPeriodTo                  cstackBANK0  000066
?_trunc                        cstackCOMRAM 000049
LockMotor@i                    cstackBANK0  000081
SetDutyCycleTo@Duty_cycle      cstackBANK0  000060
SetDutyCycleTo@PWM10BitValue   cstackBANK0  00006A
SetDutyCycleTo@Period          cstackBANK0  000063
_ADCON1                        (abs)        000FC1
_CCP1CON                       (abs)        000FBD
_CCPR1L                        (abs)        000FBE
_LockMotor                     text1        00798A
_Message1                      dataBANK0    000083
_OSCCON                        (abs)        000FD3
_PORTAbits                     (abs)        000F80
_PORTB                         (abs)        000F81
_PORTBbits                     (abs)        000F81
_PORTCbits                     (abs)        000F82
_PORTD                         (abs)        000F83
_PORTDbits                     (abs)        000F83
_PR2                           (abs)        000FCB
_PWM_Init                      text18       006F36
_SetDutyCycleTo                text11       0075E8
_SetDutyCycleTo$1221           cstackBANK0  000067
_T2CON                         (abs)        000FCA
_T2CONbits                     (abs)        000FCA
_TMR2                          (abs)        000FCC
_TRISA0                        (abs)        007C90
_TRISC                         (abs)        000F94
_TRISCbits                     (abs)        000F94
_TRISD                         (abs)        000F95
__HRAM                         (abs)        000000
__Habs1                        abs1         000000
__Hbank0                       bank0        000000
__Hbank1                       bank1        000000
__Hbank2                       bank2        000000
__Hbank3                       bank3        000000
__Hbank4                       bank4        000000
__Hbank5                       bank5        000000
__Hbank6                       bank6        000000
__Hbank7                       bank7        000000
__Hbigbss                      bigbss       000000
__Hbigdata                     bigdata      000000
__Hbigram                      bigram       000000
__Hbss                         bss          000000
__HbssBANK0                    bssBANK0     000000
__Hcinit                       cinit        000000
__Hclrtext                     clrtext      000000
__Hcomram                      comram       000000
__Hconfig                      config       30000E
__Hconst                       const        000000
__HcstackBANK0                 cstackBANK0  000000
__HcstackCOMRAM                cstackCOMRAM 000000
__Hdata                        data         000000
__HdataBANK0                   dataBANK0    000000
__Heeprom_data                 eeprom_data  000000
__Hend_init                    end_init     001004
__Hfarbss                      farbss       000000
__Hfardata                     fardata      000000
__Hibigdata                    ibigdata     000000
__Hidata                       idata        000000
__HidataBANK0                  idataBANK0   000000
__Hidloc                       idloc        200008
__Hifardata                    ifardata     000000
__Hinit                        init         001000
__Hintcode                     intcode      001000
__Hintcode_body                intcode_body 000000
__Hintcodelo                   intcodelo    001000
__Hintentry                    intentry     000000
__Hintret                      intret       000000
__Hintsave_regs                intsave_regs 000000
__Hirdata                      irdata       000000
__Hmediumconst                 mediumconst  000000
__HnvFARRAM                    nvFARRAM     000000
__Hnvbit                       nvbit        000000
__Hnvrram                      nvrram       000000
__Hparam                       rparam       000000
__Hpowerup                     powerup      001000
__Hram                         ram          000000
__Hramtop                      ramtop       000800
__Hrbit                        rbit         000000
__Hrbss                        rbss         000000
__Hrdata                       rdata        000000
__Hreset_vec                   reset_vec    001000
__Hrparam                      rparam       000000
__Hsfr                         sfr          000000
__Hsmallconst                  smallconst   001018
__Hspace_0                     (abs)        30000E
__Hspace_1                     (abs)        0000A1
__Hspace_2                     (abs)        000000
__Hstack                       stack        000000
__Hstruct                      struct       000000
__Htemp                        temp         000000
__Htext                        text         000000
__Htext0                       text0        000000
__Htext1                       text1        000000
__Htext10                      text10       000000
__Htext11                      text11       000000
__Htext12                      text12       000000
__Htext13                      text13       000000
__Htext14                      text14       000000
__Htext15                      text15       000000
__Htext16                      text16       000000
__Htext17                      text17       000000
__Htext18                      text18       000000
__Htext19                      text19       000000
__Htext2                       text2        000000
__Htext20                      text20       000000
__Htext21                      text21       000000
__Htext22                      text22       000000
__Htext23                      text23       000000
__Htext24                      text24       000000
__Htext25                      text25       000000
__Htext3                       text3        000000
__Htext4                       text4        000000
__Htext5                       text5        000000
__Htext6                       text6        000000
__Htext7                       text7        000000
__Htext8                       text8        000000
__Htext9                       text9        000000
__LRAM                         (abs)        000001
__Labs1                        abs1         000000
__Lbank0                       bank0        000000
__Lbank1                       bank1        000000
__Lbank2                       bank2        000000
__Lbank3                       bank3        000000
__Lbank4                       bank4        000000
__Lbank5                       bank5        000000
__Lbank6                       bank6        000000
__Lbank7                       bank7        000000
__Lbigbss                      bigbss       000000
__Lbigdata                     bigdata      000000
__Lbigram                      bigram       000000
__Lbss                         bss          000000
__LbssBANK0                    bssBANK0     000000
__Lcinit                       cinit        000000
__Lclrtext                     clrtext      000000
__Lcomram                      comram       000000
__Lconfig                      config       300000
__Lconst                       const        000000
__LcstackBANK0                 cstackBANK0  000000
__LcstackCOMRAM                cstackCOMRAM 000000
__Ldata                        data         000000
__LdataBANK0                   dataBANK0    000000
__Leeprom_data                 eeprom_data  000000
__Lend_init                    end_init     001000
__Lfarbss                      farbss       000000
__Lfardata                     fardata      000000
__Libigdata                    ibigdata     000000
__Lidata                       idata        000000
__LidataBANK0                  idataBANK0   000000
__Lidloc                       idloc        200000
__Lifardata                    ifardata     000000
__Linit                        init         001000
__Lintcode                     intcode      001000
__Lintcode_body                intcode_body 000000
__Lintcodelo                   intcodelo    001000
__Lintentry                    intentry     000000
__Lintret                      intret       000000
__Lintsave_regs                intsave_regs 000000
__Lirdata                      irdata       000000
__Lmediumconst                 mediumconst  000000
__LnvFARRAM                    nvFARRAM     000000
__Lnvbit                       nvbit        000000
__Lnvrram                      nvrram       000000
__Lparam                       rparam       000000
__Lpowerup                     powerup      001000
__Lram                         ram          000000
__Lramtop                      ramtop       000800
__Lrbit                        rbit         000000
__Lrbss                        rbss         000000
__Lrdata                       rdata        000000
__Lreset_vec                   reset_vec    001000
__Lrparam                      rparam       000000
__Lsfr                         sfr          000000
__Lsmallconst                  smallconst   001004
__Lspace_0                     (abs)        000000
__Lspace_1                     (abs)        000000
__Lspace_2                     (abs)        000000
__Lstack                       stack        000000
__Lstruct                      struct       000000
__Ltemp                        temp         000000
__Ltext                        text         000000
__Ltext0                       text0        000000
__Ltext1                       text1        000000
__Ltext10                      text10       000000
__Ltext11                      text11       000000
__Ltext12                      text12       000000
__Ltext13                      text13       000000
__Ltext14                      text14       000000
__Ltext15                      text15       000000
__Ltext16                      text16       000000
__Ltext17                      text17       000000
__Ltext18                      text18       000000
__Ltext19                      text19       000000
__Ltext2                       text2        000000
__Ltext20                      text20       000000
__Ltext21                      text21       000000
__Ltext22                      text22       000000
__Ltext23                      text23       000000
__Ltext24                      text24       000000
__Ltext25                      text25       000000
__Ltext3                       text3        000000
__Ltext4                       text4        000000
__Ltext5                       text5        000000
__Ltext6                       text6        000000
__Ltext7                       text7        000000
__Ltext8                       text8        000000
__Ltext9                       text9        000000
__S0                           (abs)        30000E
__S1                           (abs)        0000A1
__S2                           (abs)        000000
___altoft                      text7        00722E
___altoft@c                    cstackCOMRAM 00003F
___altoft@exp                  cstackCOMRAM 000047
___altoft@sign                 cstackCOMRAM 000048
___awtoft                      text16       007042
___awtoft@c                    cstackCOMRAM 000009
___awtoft@sign                 cstackCOMRAM 00000C
___ftadd                       text15       007AD4
___ftadd@exp1                  cstackCOMRAM 00005F
___ftadd@exp2                  cstackCOMRAM 00005E
___ftadd@f1                    cstackCOMRAM 000054
___ftadd@f2                    cstackCOMRAM 000057
___ftadd@sign                  cstackCOMRAM 00005D
___ftdiv                       text14       0076BC
___ftdiv@cntr                  cstackCOMRAM 00002A
___ftdiv@exp                   cstackCOMRAM 00002E
___ftdiv@f1                    cstackCOMRAM 000021
___ftdiv@f2                    cstackCOMRAM 000024
___ftdiv@f3                    cstackCOMRAM 00002B
___ftdiv@sign                  cstackCOMRAM 00002F
___ftmul                       text13       0077A2
___ftmul@cntr                  cstackCOMRAM 00001F
___ftmul@exp                   cstackCOMRAM 00001B
___ftmul@f1                    cstackCOMRAM 000012
___ftmul@f2                    cstackCOMRAM 000015
___ftmul@f3_as_product         cstackCOMRAM 00001C
___ftmul@sign                  cstackCOMRAM 000020
___ftneg                       text8        006F7E
___ftneg@f1                    cstackCOMRAM 000051
___ftpack                      text17       00753A
___ftpack@arg                  cstackCOMRAM 000001
___ftpack@exp                  cstackCOMRAM 000004
___ftpack@sign                 cstackCOMRAM 000005
___fttol                       text12       007896
___fttol@exp1                  cstackCOMRAM 00003E
___fttol@f1                    cstackCOMRAM 000030
___fttol@lval                  cstackCOMRAM 00003A
___fttol@sign1                 cstackCOMRAM 000039
___inthi_sp                    stack        000000
___intlo_sp                    stack        000000
___lltoft                      text9        0070F0
___lltoft@c                    cstackCOMRAM 000009
___lltoft@exp                  cstackCOMRAM 000011
___param_bank                  (abs)        000010
___rparam_used                 (abs)        000001
___sp                          stack        000000
__accesstop                    (abs)        000060
__activetblptr                 (abs)        000001
__end_of_LockMotor             text1        007AD4
__end_of_PWM_Init              text18       006F3E
__end_of_SetDutyCycleTo        text11       0076BC
__end_of___altoft              text7        0072A6
__end_of___awtoft              text16       00707A
__end_of___ftadd               text15       007C80
__end_of___ftdiv               text14       0077A2
__end_of___ftmul               text13       007896
__end_of___ftneg               text8        006FA2
__end_of___ftpack              text17       0075E8
__end_of___fttol               text12       00798A
__end_of___lltoft              text9        00714C
__end_of__initialization       cinit        0070A6
__end_of_clearScreen           text22       0070F0
__end_of_delay                 text10       007042
__end_of_delay_ms              text21       006FD6
__end_of_frexp                 text6        00731E
__end_of_getkey                text20       00700C
__end_of_lcd_init              text19       00722E
__end_of_lcd_strobe            text25       006F7E
__end_of_lcd_write_cmd         text24       0071BC
__end_of_lcd_write_data        text23       00753A
__end_of_main                  text0        006F46
__end_of_motorlock_right       text2        007396
__end_of_round                 text4        0074A6
__end_of_setPeriodTo           text3        008000
__end_of_trunc                 text5        007418
__end_ofgetkey@F4444           smallconst   001017
__initialization               cinit        00707A
__mediumconst                  mediumconst  000000
__pbssBANK0                    bssBANK0     000098
__pcinit                       cinit        00707A
__pcstackBANK0                 cstackBANK0  000060
__pcstackCOMRAM                cstackCOMRAM 000001
__pdataBANK0                   dataBANK0    000083
__pidataBANK0                  idataBANK0   006F47
__psmallconst                  smallconst   001004
__ptext0                       text0        006F3E
__ptext1                       text1        00798A
__ptext10                      text10       00700C
__ptext11                      text11       0075E8
__ptext12                      text12       007896
__ptext13                      text13       0077A2
__ptext14                      text14       0076BC
__ptext15                      text15       007AD4
__ptext16                      text16       007042
__ptext17                      text17       00753A
__ptext18                      text18       006F36
__ptext19                      text19       0071BC
__ptext2                       text2        00731E
__ptext20                      text20       006FD6
__ptext21                      text21       006FA2
__ptext22                      text22       0070B4
__ptext23                      text23       0074A6
__ptext24                      text24       00714C
__ptext25                      text25       006F5C
__ptext3                       text3        007C80
__ptext4                       text4        007418
__ptext5                       text5        007396
__ptext6                       text6        0072A6
__ptext7                       text7        00722E
__ptext8                       text8        006F7E
__ptext9                       text9        0070F0
__ramtop                       ramtop       000800
__size_of_LockMotor            (abs)        000000
__size_of_PWM_Init             (abs)        000000
__size_of_SetDutyCycleTo       (abs)        000000
__size_of___altoft             (abs)        000000
__size_of___awtoft             (abs)        000000
__size_of___ftadd              (abs)        000000
__size_of___ftdiv              (abs)        000000
__size_of___ftmul              (abs)        000000
__size_of___ftneg              (abs)        000000
__size_of___ftpack             (abs)        000000
__size_of___fttol              (abs)        000000
__size_of___lltoft             (abs)        000000
__size_of_clearScreen          (abs)        000000
__size_of_delay                (abs)        000000
__size_of_delay_ms             (abs)        000000
__size_of_frexp                (abs)        000000
__size_of_getkey               (abs)        000000
__size_of_lcd_init             (abs)        000000
__size_of_lcd_strobe           (abs)        000000
__size_of_lcd_write_cmd        (abs)        000000
__size_of_lcd_write_data       (abs)        000000
__size_of_main                 (abs)        000000
__size_of_motorlock_right      (abs)        000000
__size_of_round                (abs)        000000
__size_of_setPeriodTo          (abs)        000000
__size_of_trunc                (abs)        000000
__smallconst                   smallconst   001004
_c                             bssBANK0     00009A
_clearScreen                   text22       0070B4
_delay                         text10       00700C
_delay_ms                      text21       006FA2
_errno                         bssBANK0     000098
_frexp                         text6        0072A6
_getkey                        text20       006FD6
_key                           bssBANK0     00009B
_lcd_init                      text19       0071BC
_lcd_strobe                    text25       006F5C
_lcd_write_cmd                 text24       00714C
_lcd_write_data                text23       0074A6
_main                          text0        006F3E
_motorlock_right               text2        00731E
_outchar                       bssBANK0     00009C
_p1                            bssBANK0     00009D
_p2                            bssBANK0     00009E
_p3                            bssBANK0     00009F
_p4                            bssBANK0     0000A0
_round                         text4        007418
_setPeriodTo                   text3        007C80
_setPeriodTo$1220              cstackBANK0  00006B
_trunc                         text5        007396
clearScreen@i                  cstackCOMRAM 000005
delay@i                        cstackCOMRAM 000003
delay@j                        cstackCOMRAM 000005
delay@val                      cstackCOMRAM 000001
delay_ms@i                     cstackCOMRAM 000001
delay_ms@j                     cstackCOMRAM 000004
end_of_initialization          cinit        0070A6
frexp@eptr                     cstackCOMRAM 000004
frexp@value                    cstackCOMRAM 000001
getkey@F4444                   smallconst   001005
getkey@keycode                 cstackCOMRAM 000013
getkey@lookup                  cstackCOMRAM 000001
intlevel0                      text         000000
intlevel1                      text         000000
intlevel2                      text         000000
intlevel3                      text         000000
lcd_init@i                     cstackCOMRAM 000006
lcd_write_cmd@cmd              cstackCOMRAM 000003
lcd_write_cmd@temp2            cstackCOMRAM 000004
lcd_write_data@data            cstackCOMRAM 000003
lcd_write_data@temp1           cstackCOMRAM 000004
motorlock_right@Period         cstackBANK0  00007F
round@f                        cstackBANK0  000063
round@x                        cstackBANK0  000060
setPeriodTo@FOSC               cstackBANK0  000072
setPeriodTo@FPWM               cstackBANK0  000066
setPeriodTo@TimerPrescaleBits  cstackBANK0  00006E
setPeriodTo@TimerPrescaleValue cstackBANK0  000070
setPeriodTo@_resolution        cstackBANK0  00007B
setPeriodTo@clockSelectBits    cstackBANK0  000076
setPeriodTo@period             cstackBANK0  000078
stackhi                        (abs)        0007FF
stacklo                        (abs)        0000A1
start                          init         001000
start_initialization           cinit        00707A
trunc@expon                    cstackCOMRAM 00004F
trunc@i                        cstackCOMRAM 00004C
trunc@x                        cstackCOMRAM 000049


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 4 in file "newmain.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:    7
 This function calls:
		_LockMotor
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _LockMotor *****************
 Defined at:
		line 22 in file "LockMotor.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2   33[BANK0 ] int 
 Return value:  Size  Location     Type
                  2    2[None  ] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       2       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       2       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_clearScreen
		_delay_ms
		_getkey
		_lcd_init
		_lcd_write_cmd
		_lcd_write_data
		_motorlock_right
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _motorlock_right *****************
 Defined at:
		line 80 in file "MotorFunction.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  Period          2   31[BANK0 ] int 
 Return value:  Size  Location     Type
                  2   21[None  ] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       2       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       2       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_PWM_Init
		_SetDutyCycleTo
		_delay
		_setPeriodTo
 This function is called by:
		_LockMotor
		_PIR
 This function uses a non-reentrant model


 *************** function _setPeriodTo *****************
 Defined at:
		line 27 in file "MotorFunction.c"
 Parameters:    Size  Location     Type
  FPWM            4    6[BANK0 ] unsigned long 
 Auto vars:     Size  Location     Type
  _resolution     4   27[BANK0 ] unsigned long 
  FOSC            4   18[BANK0 ] unsigned long 
  period          3   24[BANK0 ] float 
  clockSelectB    2   22[BANK0 ] int 
  TimerPrescal    2   16[BANK0 ] int 
  TimerPrescal    2   14[BANK0 ] int 
 Return value:  Size  Location     Type
                  2    6[BANK0 ] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       4       0       0       0       0       0       0       0
      Locals:         0      20       0       0       0       0       0       0       0
      Temps:          0       1       0       0       0       0       0       0       0
      Totals:         0      25       0       0       0       0       0       0       0
Total ram usage:       25 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___awtoft
		___ftadd
		___ftdiv
		___ftmul
		___fttol
		___lltoft
		_round
 This function is called by:
		_motorlock_right
		_motor_init
		_motorlock_left
 This function uses a non-reentrant model


 *************** function _round *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\round.c"
 Parameters:    Size  Location     Type
  x               3    0[BANK0 ] int 
 Auto vars:     Size  Location     Type
  f               3    3[BANK0 ] int 
 Return value:  Size  Location     Type
                  3    0[BANK0 ] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       3       0       0       0       0       0       0       0
      Locals:         0       3       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       6       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___ftadd
		___ftneg
		_trunc
 This function is called by:
		_setPeriodTo
 This function uses a non-reentrant model


 *************** function _trunc *****************
 Defined at:
		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\trunc.c"
 Parameters:    Size  Location     Type
  x               3   72[COMRAM] int 
 Auto vars:     Size  Location     Type
  i               3   75[COMRAM] int 
  expon           2   78[COMRAM] int 
 Return value:  Size  Location     Type
                  3   72[COMRAM] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         3       0       0       0       0       0       0       0       0
      Locals:         5       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___altoft
		___fttol
		_frexp
 This function is called by:
		_round
 This function uses a non-reentrant model


 *************** function _frexp *****************
 Defined at:
		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\frexp.c"
 Parameters:    Size  Location     Type
  value           3    0[COMRAM] int 
  eptr            2    3[COMRAM] PTR int 
		 -> trunc@expon(2), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[COMRAM] PTR int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         5       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_trunc
 This function uses a non-reentrant model


 *************** function ___altoft *****************
 Defined at:
		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\altoft.c"
 Parameters:    Size  Location     Type
  c               4   62[COMRAM] long 
 Auto vars:     Size  Location     Type
  sign            1   71[COMRAM] unsigned char 
  exp             1   70[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  3   62[COMRAM] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0       0       0
      Totals:        10       0       0       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		_trunc
 This function uses a non-reentrant model


 *************** function ___ftneg *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftneg.c"
 Parameters:    Size  Location     Type
  f1              3   80[COMRAM] float 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3   80[COMRAM] float 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         3       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_round
 This function uses a non-reentrant model


 *************** function ___lltoft *****************
 Defined at:
		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lltoft.c"
 Parameters:    Size  Location     Type
  c               4    8[COMRAM] unsigned long 
 Auto vars:     Size  Location     Type
  exp             1   16[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  3    8[COMRAM] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		_setPeriodTo
 This function uses a non-reentrant model


 *************** function _delay *****************
 Defined at:
		line 67 in file "MotorFunction.c"
 Parameters:    Size  Location     Type
  val             2    0[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  j               2    4[COMRAM] unsigned int 
  i               2    2[COMRAM] unsigned int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_motorlock_right
		_motorlock_left
 This function uses a non-reentrant model


 *************** function _SetDutyCycleTo *****************
 Defined at:
		line 57 in file "MotorFunction.c"
 Parameters:    Size  Location     Type
  Duty_cycle      3    0[BANK0 ] float 
  Period          2    3[BANK0 ] int 
 Auto vars:     Size  Location     Type
  PWM10BitValu    2   10[BANK0 ] int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       5       0       0       0       0       0       0       0
      Locals:         0       5       0       0       0       0       0       0       0
      Temps:          0       2       0       0       0       0       0       0       0
      Totals:         0      12       0       0       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___awtoft
		___ftadd
		___ftdiv
		___ftmul
		___fttol
 This function is called by:
		_motorlock_right
		_motorlock_left
 This function uses a non-reentrant model


 *************** function ___fttol *****************
 Defined at:
		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fttol.c"
 Parameters:    Size  Location     Type
  f1              3   47[COMRAM] float 
 Auto vars:     Size  Location     Type
  lval            4   57[COMRAM] unsigned long 
  exp1            1   61[COMRAM] unsigned char 
  sign1           1   56[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  4   47[COMRAM] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0       0       0
      Temps:          5       0       0       0       0       0       0       0       0
      Totals:        15       0       0       0       0       0       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_setPeriodTo
		_SetDutyCycleTo
		_trunc
 This function uses a non-reentrant model


 *************** function ___ftmul *****************
 Defined at:
		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftmul.c"
 Parameters:    Size  Location     Type
  f1              3   17[COMRAM] float 
  f2              3   20[COMRAM] float 
 Auto vars:     Size  Location     Type
  f3_as_produc    3   27[COMRAM] unsigned um
  sign            1   31[COMRAM] unsigned char 
  cntr            1   30[COMRAM] unsigned char 
  exp             1   26[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  3   17[COMRAM] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0       0       0
      Totals:        15       0       0       0       0       0       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		_setPeriodTo
		_SetDutyCycleTo
 This function uses a non-reentrant model


 *************** function ___ftdiv *****************
 Defined at:
		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdiv.c"
 Parameters:    Size  Location     Type
  f1              3   32[COMRAM] float 
  f2              3   35[COMRAM] float 
 Auto vars:     Size  Location     Type
  f3              3   42[COMRAM] float 
  sign            1   46[COMRAM] unsigned char 
  exp             1   45[COMRAM] unsigned char 
  cntr            1   41[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  3   32[COMRAM] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0       0       0
      Totals:        15       0       0       0       0       0       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		_setPeriodTo
		_SetDutyCycleTo
 This function uses a non-reentrant model


 *************** function ___ftadd *****************
 Defined at:
		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftadd.c"
 Parameters:    Size  Location     Type
  f1              3   83[COMRAM] float 
  f2              3   86[COMRAM] float 
 Auto vars:     Size  Location     Type
  exp1            1   94[COMRAM] unsigned char 
  exp2            1   93[COMRAM] unsigned char 
  sign            1   92[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  3   83[COMRAM] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0       0       0
      Totals:        12       0       0       0       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		_setPeriodTo
		_SetDutyCycleTo
		_round
 This function uses a non-reentrant model


 *************** function ___awtoft *****************
 Defined at:
		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awtoft.c"
 Parameters:    Size  Location     Type
  c               2    8[COMRAM] int 
 Auto vars:     Size  Location     Type
  sign            1   11[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  3    8[COMRAM] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         3       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		_setPeriodTo
		_SetDutyCycleTo
 This function uses a non-reentrant model


 *************** function ___ftpack *****************
 Defined at:
		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
 Parameters:    Size  Location     Type
  arg             3    0[COMRAM] unsigned um
  exp             1    3[COMRAM] unsigned char 
  sign            1    4[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[COMRAM] float 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         5       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		___altoft
		___awtoft
		___ftadd
		___ftdiv
		___ftmul
		___lltoft
 This function uses a non-reentrant model


 *************** function _PWM_Init *****************
 Defined at:
		line 20 in file "MotorFunction.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_motorlock_right
		_motor_init
		_motorlock_left
 This function uses a non-reentrant model


 *************** function _lcd_init *****************
 Defined at:
		line 94 in file "lcd_utilities.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2    5[COMRAM] int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_lcd_write_cmd
 This function is called by:
		_LockMotor
		_PIR
		_UltraSound
 This function uses a non-reentrant model


 *************** function _getkey *****************
 Defined at:
		line 17 in file "keypad_utilities.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  lookup         18    0[COMRAM] const unsigned char [18]
  keycode         1   18[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:        19       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:        19       0       0       0       0       0       0       0       0
Total ram usage:       19 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_LockMotor
 This function uses a non-reentrant model


 *************** function _delay_ms *****************
 Defined at:
		line 10 in file "delays_utilities.c"
 Parameters:    Size  Location     Type
  i               2    0[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  j               2    3[COMRAM] unsigned int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_LockMotor
		_PIR
		_UltraSound
		_buzzer_but
 This function uses a non-reentrant model


 *************** function _clearScreen *****************
 Defined at:
		line 10 in file "LockMotor.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2    4[COMRAM] int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_lcd_write_cmd
		_lcd_write_data
 This function is called by:
		_LockMotor
 This function uses a non-reentrant model


 *************** function _lcd_write_data *****************
 Defined at:
		line 54 in file "lcd_utilities.c"
 Parameters:    Size  Location     Type
  data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  data            1    2[COMRAM] unsigned char 
  temp1           1    3[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_lcd_strobe
 This function is called by:
		_clearScreen
		_LockMotor
 This function uses a non-reentrant model


 *************** function _lcd_write_cmd *****************
 Defined at:
		line 29 in file "lcd_utilities.c"
 Parameters:    Size  Location     Type
  cmd             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  cmd             1    2[COMRAM] unsigned char 
  temp2           1    3[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_lcd_strobe
 This function is called by:
		_lcd_init
		_clearScreen
		_LockMotor
		_PIR
 This function uses a non-reentrant model


 *************** function _lcd_strobe *****************
 Defined at:
		line 84 in file "lcd_utilities.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_lcd_write_cmd
		_lcd_write_data
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
lcd_utilities.c
		_lcd_write_data		CODE           	74A6	0000	149
		_lcd_write_cmd 		CODE           	714C	0000	113
		_lcd_strobe    		CODE           	6F5C	0000	35
		_lcd_init      		CODE           	71BC	0000	115

lcd_utilities.c estimated size: 412

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftadd.c
		___ftadd       		CODE           	7AD4	0000	429

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftadd.c estimated size: 429

keypad_utilities.c
		_getkey        		CODE           	6FD6	0000	55

keypad_utilities.c estimated size: 55

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\trunc.c
		_trunc         		CODE           	7396	0000	131

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\trunc.c estimated size: 131

LockMotor.c
		_clearScreen   		CODE           	70B4	0000	61
		_LockMotor     		CODE           	798A	0000	331

LockMotor.c estimated size: 392

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\round.c
		_round         		CODE           	7418	0000	143

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\round.c estimated size: 143

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftneg.c
		___ftneg       		CODE           	6F7E	0000	37

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftneg.c estimated size: 37

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awtoft.c
		___awtoft      		CODE           	7042	0000	57

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awtoft.c estimated size: 57

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\altoft.c
		___altoft      		CODE           	722E	0000	121

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\altoft.c estimated size: 121

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c
		___ftpack      		CODE           	753A	0000	175

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c estimated size: 175

newmain.c
		_main          		CODE           	6F3E	0000	9

newmain.c estimated size: 9

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lltoft.c
		___lltoft      		CODE           	70F0	0000	93

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lltoft.c estimated size: 93

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\frexp.c
		_frexp         		CODE           	72A6	0000	121

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\frexp.c estimated size: 121

shared
		__initialization		CODE           	707A	0000	45
		getkey@F4444   		SMALLCONST     	1005	0000	19

shared estimated size: 64

delays_utilities.c
		_delay_ms      		CODE           	6FA2	0000	53

delays_utilities.c estimated size: 53

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftmul.c
		___ftmul       		CODE           	77A2	0000	245

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftmul.c estimated size: 245

MotorFunction.c
		_delay         		CODE           	700C	0000	55
		_setPeriodTo   		CODE           	7C80	0000	897
		_SetDutyCycleTo		CODE           	75E8	0000	213
		_motorlock_right		CODE           	731E	0000	121
		_PWM_Init      		CODE           	6F36	0000	9

MotorFunction.c estimated size: 1295

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdiv.c
		___ftdiv       		CODE           	76BC	0000	231

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdiv.c estimated size: 231

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fttol.c
		___fttol       		CODE           	7896	0000	245

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fttol.c estimated size: 245

