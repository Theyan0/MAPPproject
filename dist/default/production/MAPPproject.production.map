Microchip MPLAB XC8 Compiler V1.35 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v1.35\dat\en_msgs.txt -cs \
  -h+dist/default/production\MAPPproject.production.sym \
  --cmf=dist/default/production\MAPPproject.production.cmf -z -Q18F4550 \
  -oC:\Users\shaun\AppData\Local\Temp\s2oo.2 \
  -Mdist/default/production/MAPPproject.production.map -E1 -ver=XC8 \
  -ASTACK=0115h-07ffh -pstack=STACK -ACODE=01000h-07FFFh \
  -ACONST=01000h-07FFFh -ASMALLCONST=01000h-010FFhx112 \
  -AMEDIUMCONST=01000h-07FFFh -ACOMRAM=01h-05Fh -AABS1=00h-07FFh \
  -ABIGRAM=01h-07FFh -ARAM=060h-0FFh,0100h-01FFhx7 -ABANK0=060h-0FFh \
  -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh -ABANK3=0300h-03FFh \
  -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh -ABANK6=0600h-06FFh \
  -ABANK7=0700h-07FFh -ASFR=0F60h-0FFFh \
  -preset_vec=01000h,intcode,intcodelo,powerup,init,end_init -pramtop=0800h \
  -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST -pconst=CONST \
  -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\shaun\AppData\Local\Temp\s2oo.obj \
  dist/default/production\MAPPproject.production.obj 

Object code version is 3.11

Machine type is 18F4550

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\shaun\AppData\Local\Temp\s2oo.obj
                end_init                           1000     1000        4      800       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\MAPPproject.production.obj
                smallconst                         1004     1004       14      802       0
                text30                             6D5E     6D5E       1C     36AF       0
                text29                             6D3C     6D3C        C     369E       0
                text28                             6DEC     6DEC       34     36F6       0
                text27                             6E20     6E20       36     3710       0
                text26                             6D1E     6D1E        4     368F       0
                text25                             6D7A     6D7A       22     36BD       0
                text24                             7052     7052       70     3829       0
                text23                             70C2     70C2       72     3861       0
                text22                             7334     7334       94     399A       0
                text21                             6D22     6D22        8     3691       0
                text20                             6E56     6E56       36     372B       0
                text19                             73C8     73C8       AE     39E4       0
                text18                             6E8C     6E8C       38     3746       0
                text17                             78D8     78D8      1AC     3C6C       0
                text16                             760A     760A       E6     3B05       0
                text15                             76F0     76F0       F4     3B78       0
                text14                             77E4     77E4       F4     3BF2       0
                text13                             7476     7476       CA     3A3B       0
                text12                             6F1E     6F1E       5C     378F       0
                text11                             6D9C     6D9C       24     36CE       0
                text10                             7134     7134       78     389A       0
                text9                              71AC     71AC       78     38D6       0
                text8                              7224     7224       82     3912       0
                text7                              72A6     72A6       8E     3953       0
                text6                              7C80     7C80      380     3E40       0
                text5                              6F7A     6F7A       6C     37BD       0
                text4                              6D2A     6D2A        8     3695       0
                text3                              7540     7540       CA     3AA0       0
                text2                              6FE6     6FE6       6C     37F3       0
                text1                              7A84     7A84      1FC     3D42       0
                text0                              6D32     6D32        A     3699       0
                cstackCOMRAM                          1        1       5F        1       1
                cstackBANK0                          60       60       57       60       1
                dataBANK1                           100      100       15      100       1
                dataBANK0                            B7       B7       2C       60       1
                bssBANK0                             E3       E3        B       60       1
                cinit                              6EC4     6EC4       5A     3762       0
                idataBANK1                         6D49     6D49       15     6D49       0
                idataBANK0                         6DC0     6DC0       2C     6DC0       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                           1000     1000        4         0
                text30                             6D5E     6D5E       1C         0
                text29                             6D3C     6D3C        C         0
                text28                             6DEC     6DEC       34         0
                text27                             6E20     6E20       36         0
                text26                             6D1E     6D1E        4         0
                text25                             6D7A     6D7A       22         0
                text24                             7052     7052       70         0
                text23                             70C2     70C2       72         0
                text22                             7334     7334       94         0
                text21                             6D22     6D22        8         0
                text20                             6E56     6E56       36         0
                text19                             73C8     73C8       AE         0
                text18                             6E8C     6E8C       38         0
                text17                             78D8     78D8      1AC         0
                text16                             760A     760A       E6         0
                text15                             76F0     76F0       F4         0
                text14                             77E4     77E4       F4         0
                text13                             7476     7476       CA         0
                text12                             6F1E     6F1E       5C         0
                text11                             6D9C     6D9C       24         0
                text10                             7134     7134       78         0
                text9                              71AC     71AC       78         0
                text8                              7224     7224       82         0
                text7                              72A6     72A6       8E         0
                text6                              7C80     7C80      380         0
                text5                              6F7A     6F7A       6C         0
                text4                              6D2A     6D2A        8         0
                text3                              7540     7540       CA         0
                text2                              6FE6     6FE6       6C         0
                text1                              7A84     7A84      1FC         0
                text0                              6D32     6D32        A         0
                cinit                              6EC4     6EC4       5A         0
                idataBANK1                         6D49     6D49       15         0
                idataBANK0                         6DC0     6DC0       2C         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                         1004     1004       14         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                cstackCOMRAM                          1        1       5F         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          60       60       57         1
                dataBANK0                            B7       B7       2C         1
                bssBANK0                             E3       E3        B         1

        CLASS   BANK1          
                dataBANK1                           100      100       15         1

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   BANK6          

        CLASS   BANK7          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                cstackCOMRAM                   000001  00005F  000060         1       1  COMRAM  
                cstackBANK0                    000060  00008E  0000EE        60       1  BANK0   
                dataBANK1                      000100  000015  000115       100       1  BANK1   
                reset_vec                      001000  000004  001004       800       0  CODE    
                smallconst                     001004  000014  001018       802       0  SMALLCON
                text26                         006D1E  000004  006D22      368F       0  CODE    
                text21                         006D22  000008  006D2A      3691       0  CODE    
                text4                          006D2A  000008  006D32      3695       0  CODE    
                text0                          006D32  00000A  006D3C      3699       0  CODE    
                text29                         006D3C  00000C  006D48      369E       0  CODE    
                idataBANK1                     006D49  000015  006D5E      6D49       0  CODE    
                text30                         006D5E  00001C  006D7A      36AF       0  CODE    
                text25                         006D7A  000022  006D9C      36BD       0  CODE    
                text11                         006D9C  000024  006DC0      36CE       0  CODE    
                idataBANK0                     006DC0  00002C  006DEC      6DC0       0  CODE    
                text28                         006DEC  000034  006E20      36F6       0  CODE    
                text27                         006E20  000036  006E56      3710       0  CODE    
                text20                         006E56  000036  006E8C      372B       0  CODE    
                text18                         006E8C  000038  006EC4      3746       0  CODE    
                cinit                          006EC4  00005A  006F1E      3762       0  CODE    
                text12                         006F1E  00005C  006F7A      378F       0  CODE    
                text5                          006F7A  00006C  006FE6      37BD       0  CODE    
                text2                          006FE6  00006C  007052      37F3       0  CODE    
                text24                         007052  000070  0070C2      3829       0  CODE    
                text23                         0070C2  000072  007134      3861       0  CODE    
                text10                         007134  000078  0071AC      389A       0  CODE    
                text9                          0071AC  000078  007224      38D6       0  CODE    
                text8                          007224  000082  0072A6      3912       0  CODE    
                text7                          0072A6  00008E  007334      3953       0  CODE    
                text22                         007334  000094  0073C8      399A       0  CODE    
                text19                         0073C8  0000AE  007476      39E4       0  CODE    
                text13                         007476  0000CA  007540      3A3B       0  CODE    
                text3                          007540  0000CA  00760A      3AA0       0  CODE    
                text16                         00760A  0000E6  0076F0      3B05       0  CODE    
                text15                         0076F0  0000F4  0077E4      3B78       0  CODE    
                text14                         0077E4  0000F4  0078D8      3BF2       0  CODE    
                text17                         0078D8  0001AC  007A84      3C6C       0  CODE    
                text1                          007A84  0001FC  007C80      3D42       0  CODE    
                text6                          007C80  000380  008000      3E40       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0000EE-0000FF               12
        BANK1            000115-0001FF               EB
        BANK2            000200-0002FF              100
        BANK3            000300-0003FF              100
        BANK4            000400-0004FF              100
        BANK5            000500-0005FF              100
        BANK6            000600-0006FF              100
        BANK7            000700-0007FF              100
        BIGRAM           0000EE-0000FF               12
                         000115-0007FF              6EB
        CODE             001018-006D1D             5D06
                         006D48-006D48                1
        CONST            001018-006D1D             5D06
                         006D48-006D48                1
        EEDATA           F00000-F000FF              100
        FARRAM           000000-000000                1
        MEDIUMCONST      001018-006D1D             5D06
                         006D48-006D48                1
        RAM              0000EE-0000FF               12
                         000115-0007FF              100
        SFR              000F60-000FFF               A0
        SMALLCONST       001018-006D1D              100
                         006D48-006D48                1
        STACK            000115-0007FF              6EB

                                  Symbol Table

?___altoft                       cstackCOMRAM 00004B
?___awtoft                       cstackCOMRAM 000009
?___ftadd                        cstackCOMRAM 000021
?___ftdiv                        cstackCOMRAM 000012
?___ftmul                        cstackCOMRAM 00002D
?___ftneg                        cstackCOMRAM 00005D
?___ftpack                       cstackCOMRAM 000001
?___fttol                        cstackCOMRAM 00003C
?___lltoft                       cstackCOMRAM 000009
?_round                          cstackBANK0  000060
?_setPeriodTo                    cstackBANK0  000066
?_trunc                          cstackCOMRAM 000055
LockMotor@F4629                  dataBANK0    0000B7
LockMotor@F4632                  dataBANK0    0000CC
LockMotor@F4637                  dataBANK0    0000D9
LockMotor@Message1               cstackBANK0  000081
LockMotor@errorMsg               cstackBANK0  0000A3
LockMotor@i                      cstackBANK0  0000B1
LockMotor@i_534                  cstackBANK0  0000B3
LockMotor@i_537                  cstackBANK0  0000B5
LockMotor@openMsg                cstackBANK0  000096
LockMotor@p1                     cstackBANK0  0000AD
LockMotor@p2                     cstackBANK0  0000AE
LockMotor@p3                     cstackBANK0  0000AF
LockMotor@p4                     cstackBANK0  0000B0
SetDutyCycleTo@Duty_cycle        cstackCOMRAM 00004B
SetDutyCycleTo@PWM10BitValue     cstackCOMRAM 000055
SetDutyCycleTo@Period            cstackCOMRAM 00004E
UART_Write@data                  cstackCOMRAM 000001
_ADCON1                          (abs)        000FC1
_BAUDCON                         (abs)        000FB8
_CCP1CON                         (abs)        000FBD
_CCP2CON                         (abs)        000FBA
_CCPR1L                          (abs)        000FBE
_CCPR2L                          (abs)        000FBB
_LockMotor                       text1        007A84
_Message1                        dataBANK1    000100
_OSCCON                          (abs)        000FD3
_PIR1bits                        (abs)        000F9E
_PORTAbits                       (abs)        000F80
_PORTB                           (abs)        000F81
_PORTBbits                       (abs)        000F81
_PORTCbits                       (abs)        000F82
_PORTD                           (abs)        000F83
_PORTDbits                       (abs)        000F83
_PR2                             (abs)        000FCB
_PWM_Init                        text4        006D2A
_PWMdoor_Init                    text21       006D22
_RCSTA                           (abs)        000FAB
_SPBRG                           (abs)        000FAF
_SPBRGH                          (abs)        000FB0
_SetDutyCycleTo                  text3        007540
_SetDutyCycleTo$1377             cstackCOMRAM 000052
_T2CON                           (abs)        000FCA
_T2CONbits                       (abs)        000FCA
_TMR2                            (abs)        000FCC
_TRISAbits                       (abs)        000F92
_TRISC                           (abs)        000F94
_TRISCbits                       (abs)        000F94
_TRISD                           (abs)        000F95
_TRMT                            (abs)        007D61
_TXREG                           (abs)        000FAD
_TXSTA                           (abs)        000FAC
_UART_Init                       text30       006D5E
_UART_Write                      text29       006D3C
__CFG_FOSC$HS                    (abs)        000000
__CFG_LVP$OFF                    (abs)        000000
__CFG_PBADEN$OFF                 (abs)        000000
__CFG_WDT$OFF                    (abs)        000000
__HRAM                           (abs)        000000
__Habs1                          abs1         000000
__Hbank0                         bank0        000000
__Hbank1                         bank1        000000
__Hbank2                         bank2        000000
__Hbank3                         bank3        000000
__Hbank4                         bank4        000000
__Hbank5                         bank5        000000
__Hbank6                         bank6        000000
__Hbank7                         bank7        000000
__Hbigbss                        bigbss       000000
__Hbigdata                       bigdata      000000
__Hbigram                        bigram       000000
__Hbss                           bss          000000
__HbssBANK0                      bssBANK0     000000
__Hcinit                         cinit        000000
__Hclrtext                       clrtext      000000
__Hcomram                        comram       000000
__Hconfig                        config       30000E
__Hconst                         const        000000
__HcstackBANK0                   cstackBANK0  000000
__HcstackCOMRAM                  cstackCOMRAM 000000
__Hdata                          data         000000
__HdataBANK0                     dataBANK0    000000
__HdataBANK1                     dataBANK1    000000
__Heeprom_data                   eeprom_data  000000
__Hend_init                      end_init     001004
__Hfarbss                        farbss       000000
__Hfardata                       fardata      000000
__Hibigdata                      ibigdata     000000
__Hidata                         idata        000000
__HidataBANK0                    idataBANK0   000000
__HidataBANK1                    idataBANK1   000000
__Hidloc                         idloc        200008
__Hifardata                      ifardata     000000
__Hinit                          init         001000
__Hintcode                       intcode      001000
__Hintcode_body                  intcode_body 000000
__Hintcodelo                     intcodelo    001000
__Hintentry                      intentry     000000
__Hintret                        intret       000000
__Hintsave_regs                  intsave_regs 000000
__Hirdata                        irdata       000000
__Hmediumconst                   mediumconst  000000
__HnvFARRAM                      nvFARRAM     000000
__Hnvbit                         nvbit        000000
__Hnvrram                        nvrram       000000
__Hparam                         rparam       000000
__Hpowerup                       powerup      001000
__Hram                           ram          000000
__Hramtop                        ramtop       000800
__Hrbit                          rbit         000000
__Hrbss                          rbss         000000
__Hrdata                         rdata        000000
__Hreset_vec                     reset_vec    001000
__Hrparam                        rparam       000000
__Hsfr                           sfr          000000
__Hsmallconst                    smallconst   001018
__Hspace_0                       (abs)        30000E
__Hspace_1                       (abs)        000115
__Hspace_2                       (abs)        000000
__Hstack                         stack        000000
__Hstruct                        struct       000000
__Htemp                          temp         000000
__Htext                          text         000000
__Htext0                         text0        000000
__Htext1                         text1        000000
__Htext10                        text10       000000
__Htext11                        text11       000000
__Htext12                        text12       000000
__Htext13                        text13       000000
__Htext14                        text14       000000
__Htext15                        text15       000000
__Htext16                        text16       000000
__Htext17                        text17       000000
__Htext18                        text18       000000
__Htext19                        text19       000000
__Htext2                         text2        000000
__Htext20                        text20       000000
__Htext21                        text21       000000
__Htext22                        text22       000000
__Htext23                        text23       000000
__Htext24                        text24       000000
__Htext25                        text25       000000
__Htext26                        text26       000000
__Htext27                        text27       000000
__Htext28                        text28       000000
__Htext29                        text29       000000
__Htext3                         text3        000000
__Htext30                        text30       000000
__Htext4                         text4        000000
__Htext5                         text5        000000
__Htext6                         text6        000000
__Htext7                         text7        000000
__Htext8                         text8        000000
__Htext9                         text9        000000
__LRAM                           (abs)        000001
__Labs1                          abs1         000000
__Lbank0                         bank0        000000
__Lbank1                         bank1        000000
__Lbank2                         bank2        000000
__Lbank3                         bank3        000000
__Lbank4                         bank4        000000
__Lbank5                         bank5        000000
__Lbank6                         bank6        000000
__Lbank7                         bank7        000000
__Lbigbss                        bigbss       000000
__Lbigdata                       bigdata      000000
__Lbigram                        bigram       000000
__Lbss                           bss          000000
__LbssBANK0                      bssBANK0     000000
__Lcinit                         cinit        000000
__Lclrtext                       clrtext      000000
__Lcomram                        comram       000000
__Lconfig                        config       300000
__Lconst                         const        000000
__LcstackBANK0                   cstackBANK0  000000
__LcstackCOMRAM                  cstackCOMRAM 000000
__Ldata                          data         000000
__LdataBANK0                     dataBANK0    000000
__LdataBANK1                     dataBANK1    000000
__Leeprom_data                   eeprom_data  000000
__Lend_init                      end_init     001000
__Lfarbss                        farbss       000000
__Lfardata                       fardata      000000
__Libigdata                      ibigdata     000000
__Lidata                         idata        000000
__LidataBANK0                    idataBANK0   000000
__LidataBANK1                    idataBANK1   000000
__Lidloc                         idloc        200000
__Lifardata                      ifardata     000000
__Linit                          init         001000
__Lintcode                       intcode      001000
__Lintcode_body                  intcode_body 000000
__Lintcodelo                     intcodelo    001000
__Lintentry                      intentry     000000
__Lintret                        intret       000000
__Lintsave_regs                  intsave_regs 000000
__Lirdata                        irdata       000000
__Lmediumconst                   mediumconst  000000
__LnvFARRAM                      nvFARRAM     000000
__Lnvbit                         nvbit        000000
__Lnvrram                        nvrram       000000
__Lparam                         rparam       000000
__Lpowerup                       powerup      001000
__Lram                           ram          000000
__Lramtop                        ramtop       000800
__Lrbit                          rbit         000000
__Lrbss                          rbss         000000
__Lrdata                         rdata        000000
__Lreset_vec                     reset_vec    001000
__Lrparam                        rparam       000000
__Lsfr                           sfr          000000
__Lsmallconst                    smallconst   001004
__Lspace_0                       (abs)        000000
__Lspace_1                       (abs)        000000
__Lspace_2                       (abs)        000000
__Lstack                         stack        000000
__Lstruct                        struct       000000
__Ltemp                          temp         000000
__Ltext                          text         000000
__Ltext0                         text0        000000
__Ltext1                         text1        000000
__Ltext10                        text10       000000
__Ltext11                        text11       000000
__Ltext12                        text12       000000
__Ltext13                        text13       000000
__Ltext14                        text14       000000
__Ltext15                        text15       000000
__Ltext16                        text16       000000
__Ltext17                        text17       000000
__Ltext18                        text18       000000
__Ltext19                        text19       000000
__Ltext2                         text2        000000
__Ltext20                        text20       000000
__Ltext21                        text21       000000
__Ltext22                        text22       000000
__Ltext23                        text23       000000
__Ltext24                        text24       000000
__Ltext25                        text25       000000
__Ltext26                        text26       000000
__Ltext27                        text27       000000
__Ltext28                        text28       000000
__Ltext29                        text29       000000
__Ltext3                         text3        000000
__Ltext30                        text30       000000
__Ltext4                         text4        000000
__Ltext5                         text5        000000
__Ltext6                         text6        000000
__Ltext7                         text7        000000
__Ltext8                         text8        000000
__Ltext9                         text9        000000
__S0                             (abs)        30000E
__S1                             (abs)        000115
__S2                             (abs)        000000
___altoft                        text10       007134
___altoft@c                      cstackCOMRAM 00004B
___altoft@exp                    cstackCOMRAM 000053
___altoft@sign                   cstackCOMRAM 000054
___awtoft                        text18       006E8C
___awtoft@c                      cstackCOMRAM 000009
___awtoft@sign                   cstackCOMRAM 00000C
___ftadd                         text17       0078D8
___ftadd@exp1                    cstackCOMRAM 00002C
___ftadd@exp2                    cstackCOMRAM 00002B
___ftadd@f1                      cstackCOMRAM 000021
___ftadd@f2                      cstackCOMRAM 000024
___ftadd@sign                    cstackCOMRAM 00002A
___ftdiv                         text16       00760A
___ftdiv@cntr                    cstackCOMRAM 00001B
___ftdiv@exp                     cstackCOMRAM 00001F
___ftdiv@f1                      cstackCOMRAM 000012
___ftdiv@f2                      cstackCOMRAM 000015
___ftdiv@f3                      cstackCOMRAM 00001C
___ftdiv@sign                    cstackCOMRAM 000020
___ftmul                         text15       0076F0
___ftmul@cntr                    cstackCOMRAM 00003A
___ftmul@exp                     cstackCOMRAM 000036
___ftmul@f1                      cstackCOMRAM 00002D
___ftmul@f2                      cstackCOMRAM 000030
___ftmul@f3_as_product           cstackCOMRAM 000037
___ftmul@sign                    cstackCOMRAM 00003B
___ftneg                         text11       006D9C
___ftneg@f1                      cstackCOMRAM 00005D
___ftpack                        text19       0073C8
___ftpack@arg                    cstackCOMRAM 000001
___ftpack@exp                    cstackCOMRAM 000004
___ftpack@sign                   cstackCOMRAM 000005
___fttol                         text14       0077E4
___fttol@exp1                    cstackCOMRAM 00004A
___fttol@f1                      cstackCOMRAM 00003C
___fttol@lval                    cstackCOMRAM 000046
___fttol@sign1                   cstackCOMRAM 000045
___inthi_sp                      stack        000000
___intlo_sp                      stack        000000
___lltoft                        text12       006F1E
___lltoft@c                      cstackCOMRAM 000009
___lltoft@exp                    cstackCOMRAM 000011
___param_bank                    (abs)        000010
___rparam_used                   (abs)        000001
___sp                            stack        000000
__accesstop                      (abs)        000060
__activetblptr                   (abs)        000001
__end_of_LockMotor               text1        007C80
__end_of_PWM_Init                text4        006D32
__end_of_PWMdoor_Init            text21       006D2A
__end_of_SetDutyCycleTo          text3        00760A
__end_of_UART_Init               text30       006D7A
__end_of_UART_Write              text29       006D48
__end_of___altoft                text10       0071AC
__end_of___awtoft                text18       006EC4
__end_of___ftadd                 text17       007A84
__end_of___ftdiv                 text16       0076F0
__end_of___ftmul                 text15       0077E4
__end_of___ftneg                 text11       006DC0
__end_of___ftpack                text19       007476
__end_of___fttol                 text14       0078D8
__end_of___lltoft                text12       006F7A
__end_of__initialization         cinit        006F10
__end_of_delay                   text20       006E8C
__end_of_delay_ms                text28       006E20
__end_of_doorSetDutyCycleTo      text13       007540
__end_of_frexp                   text9        007224
__end_of_getkey                  text27       006E56
__end_of_lcd_backlight_on        text26       006D22
__end_of_lcd_init                text23       007134
__end_of_lcd_strobe              text25       006D9C
__end_of_lcd_write_cmd           text24       0070C2
__end_of_lcd_write_data          text22       0073C8
__end_of_main                    text0        006D3C
__end_of_motordoor_open          text5        006FE6
__end_of_motorlock_unlock        text2        007052
__end_of_round                   text7        007334
__end_of_setPeriodTo             text6        008000
__end_of_trunc                   text8        0072A6
__end_ofgetkey@F4444             smallconst   001017
__initialization                 cinit        006EC4
__mediumconst                    mediumconst  000000
__pbssBANK0                      bssBANK0     0000E3
__pcinit                         cinit        006EC4
__pcstackBANK0                   cstackBANK0  000060
__pcstackCOMRAM                  cstackCOMRAM 000001
__pdataBANK0                     dataBANK0    0000B7
__pdataBANK1                     dataBANK1    000100
__pidataBANK0                    idataBANK0   006DC0
__pidataBANK1                    idataBANK1   006D49
__psmallconst                    smallconst   001004
__ptext0                         text0        006D32
__ptext1                         text1        007A84
__ptext10                        text10       007134
__ptext11                        text11       006D9C
__ptext12                        text12       006F1E
__ptext13                        text13       007476
__ptext14                        text14       0077E4
__ptext15                        text15       0076F0
__ptext16                        text16       00760A
__ptext17                        text17       0078D8
__ptext18                        text18       006E8C
__ptext19                        text19       0073C8
__ptext2                         text2        006FE6
__ptext20                        text20       006E56
__ptext21                        text21       006D22
__ptext22                        text22       007334
__ptext23                        text23       0070C2
__ptext24                        text24       007052
__ptext25                        text25       006D7A
__ptext26                        text26       006D1E
__ptext27                        text27       006E20
__ptext28                        text28       006DEC
__ptext29                        text29       006D3C
__ptext3                         text3        007540
__ptext30                        text30       006D5E
__ptext4                         text4        006D2A
__ptext5                         text5        006F7A
__ptext6                         text6        007C80
__ptext7                         text7        0072A6
__ptext8                         text8        007224
__ptext9                         text9        0071AC
__ramtop                         ramtop       000800
__size_of_LockMotor              (abs)        000000
__size_of_PWM_Init               (abs)        000000
__size_of_PWMdoor_Init           (abs)        000000
__size_of_SetDutyCycleTo         (abs)        000000
__size_of_UART_Init              (abs)        000000
__size_of_UART_Write             (abs)        000000
__size_of___altoft               (abs)        000000
__size_of___awtoft               (abs)        000000
__size_of___ftadd                (abs)        000000
__size_of___ftdiv                (abs)        000000
__size_of___ftmul                (abs)        000000
__size_of___ftneg                (abs)        000000
__size_of___ftpack               (abs)        000000
__size_of___fttol                (abs)        000000
__size_of___lltoft               (abs)        000000
__size_of_delay                  (abs)        000000
__size_of_delay_ms               (abs)        000000
__size_of_doorSetDutyCycleTo     (abs)        000000
__size_of_frexp                  (abs)        000000
__size_of_getkey                 (abs)        000000
__size_of_lcd_backlight_on       (abs)        000000
__size_of_lcd_init               (abs)        000000
__size_of_lcd_strobe             (abs)        000000
__size_of_lcd_write_cmd          (abs)        000000
__size_of_lcd_write_data         (abs)        000000
__size_of_main                   (abs)        000000
__size_of_motordoor_open         (abs)        000000
__size_of_motorlock_unlock       (abs)        000000
__size_of_round                  (abs)        000000
__size_of_setPeriodTo            (abs)        000000
__size_of_trunc                  (abs)        000000
__smallconst                     smallconst   001004
_c                               bssBANK0     0000E7
_delay                           text20       006E56
_delay_ms                        text28       006DEC
_doorSetDutyCycleTo              text13       007476
_doorSetDutyCycleTo$1378         cstackCOMRAM 000052
_errno                           bssBANK0     0000E3
_frexp                           text9        0071AC
_getkey                          text27       006E20
_key                             bssBANK0     0000E8
_lcd_backlight_on                text26       006D1E
_lcd_init                        text23       0070C2
_lcd_strobe                      text25       006D7A
_lcd_write_cmd                   text24       007052
_lcd_write_data                  text22       007334
_main                            text0        006D32
_motordoor_open                  text5        006F7A
_motorlock_unlock                text2        006FE6
_outchar                         bssBANK0     0000E9
_p1                              bssBANK0     0000EA
_p2                              bssBANK0     0000EB
_p3                              bssBANK0     0000EC
_p4                              bssBANK0     0000ED
_round                           text7        0072A6
_setPeriodTo                     text6        007C80
_setPeriodTo$1376                cstackBANK0  00006B
_trunc                           text8        007224
_wrong                           bssBANK0     0000E5
delay@i                          cstackCOMRAM 000003
delay@j                          cstackCOMRAM 000005
delay@val                        cstackCOMRAM 000001
delay_ms@i                       cstackCOMRAM 000001
delay_ms@j                       cstackCOMRAM 000004
doorSetDutyCycleTo@Duty_cycle    cstackCOMRAM 00004B
doorSetDutyCycleTo@PWM10BitValue cstackCOMRAM 000055
doorSetDutyCycleTo@Period        cstackCOMRAM 00004E
end_of_initialization            cinit        006F10
frexp@eptr                       cstackCOMRAM 000004
frexp@value                      cstackCOMRAM 000001
getkey@F4444                     smallconst   001005
getkey@keycode                   cstackCOMRAM 000013
getkey@lookup                    cstackCOMRAM 000001
intlevel0                        text         000000
intlevel1                        text         000000
intlevel2                        text         000000
intlevel3                        text         000000
lcd_init@i                       cstackCOMRAM 000006
lcd_write_cmd@cmd                cstackCOMRAM 000003
lcd_write_cmd@temp2              cstackCOMRAM 000004
lcd_write_data@data              cstackCOMRAM 000003
lcd_write_data@temp1             cstackCOMRAM 000004
motordoor_open@Period            cstackBANK0  00007F
motorlock_unlock@Period          cstackBANK0  00007F
round@f                          cstackBANK0  000063
round@x                          cstackBANK0  000060
setPeriodTo@FOSC                 cstackBANK0  000072
setPeriodTo@FPWM                 cstackBANK0  000066
setPeriodTo@TimerPrescaleBits    cstackBANK0  00006E
setPeriodTo@TimerPrescaleValue   cstackBANK0  000070
setPeriodTo@_resolution          cstackBANK0  00007B
setPeriodTo@clockSelectBits      cstackBANK0  000076
setPeriodTo@period               cstackBANK0  000078
stackhi                          (abs)        0007FF
stacklo                          (abs)        000115
start                            init         001000
start_initialization             cinit        006EC4
trunc@expon                      cstackCOMRAM 00005B
trunc@i                          cstackCOMRAM 000058
trunc@x                          cstackCOMRAM 000055


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 7 in file "newmain.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:    7
 This function calls:
		_LockMotor
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _LockMotor *****************
 Defined at:
		line 43 in file "LockMotor.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2   85[BANK0 ] int 
  i               2   83[BANK0 ] int 
  errorMsg       10   67[BANK0 ] unsigned char [10]
  openMsg        13   54[BANK0 ] unsigned char [13]
  i               2   81[BANK0 ] int 
  Message1       21   33[BANK0 ] unsigned char [21]
  p4              1   80[BANK0 ] unsigned char 
  p3              1   79[BANK0 ] unsigned char 
  p2              1   78[BANK0 ] unsigned char 
  p1              1   77[BANK0 ] unsigned char 
  key             1    0        unsigned char 
 Return value:  Size  Location     Type
                  2    4[None  ] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0      54       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0      54       0       0       0       0       0       0       0
Total ram usage:       54 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_UART_Init
		_UART_Write
		_delay_ms
		_getkey
		_lcd_backlight_on
		_lcd_init
		_lcd_write_cmd
		_lcd_write_data
		_motordoor_open
		_motorlock_unlock
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _motorlock_unlock *****************
 Defined at:
		line 94 in file "MotorFunction.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  Period          2   31[BANK0 ] int 
 Return value:  Size  Location     Type
                  2  164[None  ] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       2       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       2       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_PWM_Init
		_SetDutyCycleTo
		_delay
		_setPeriodTo
 This function is called by:
		_LockMotor
 This function uses a non-reentrant model


 *************** function _SetDutyCycleTo *****************
 Defined at:
		line 62 in file "MotorFunction.c"
 Parameters:    Size  Location     Type
  Duty_cycle      3   74[COMRAM] float 
  Period          2   77[COMRAM] int 
 Auto vars:     Size  Location     Type
  PWM10BitValu    2   84[COMRAM] int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         5       0       0       0       0       0       0       0       0
      Locals:         5       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:        12       0       0       0       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___awtoft
		___ftadd
		___ftdiv
		___ftmul
		___fttol
 This function is called by:
		_motorlock_unlock
		_motorlock_lock
 This function uses a non-reentrant model


 *************** function _PWM_Init *****************
 Defined at:
		line 20 in file "MotorFunction.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_motorlock_unlock
		_motor_init
		_motorlock_lock
 This function uses a non-reentrant model


 *************** function _motordoor_open *****************
 Defined at:
		line 114 in file "MotorFunction.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  Period          2   31[BANK0 ] int 
 Return value:  Size  Location     Type
                  2  166[None  ] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       2       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       2       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_PWMdoor_Init
		_delay
		_doorSetDutyCycleTo
		_setPeriodTo
 This function is called by:
		_LockMotor
 This function uses a non-reentrant model


 *************** function _setPeriodTo *****************
 Defined at:
		line 32 in file "MotorFunction.c"
 Parameters:    Size  Location     Type
  FPWM            4    6[BANK0 ] unsigned long 
 Auto vars:     Size  Location     Type
  _resolution     4   27[BANK0 ] unsigned long 
  FOSC            4   18[BANK0 ] unsigned long 
  period          3   24[BANK0 ] float 
  clockSelectB    2   22[BANK0 ] int 
  TimerPrescal    2   16[BANK0 ] int 
  TimerPrescal    2   14[BANK0 ] int 
 Return value:  Size  Location     Type
                  2    6[BANK0 ] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       4       0       0       0       0       0       0       0
      Locals:         0      20       0       0       0       0       0       0       0
      Temps:          0       1       0       0       0       0       0       0       0
      Totals:         0      25       0       0       0       0       0       0       0
Total ram usage:       25 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___awtoft
		___ftadd
		___ftdiv
		___ftmul
		___fttol
		___lltoft
		_round
 This function is called by:
		_motorlock_unlock
		_motordoor_open
		_motor_init
		_motorlock_lock
		_motordoor_close
 This function uses a non-reentrant model


 *************** function _round *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\round.c"
 Parameters:    Size  Location     Type
  x               3    0[BANK0 ] int 
 Auto vars:     Size  Location     Type
  f               3    3[BANK0 ] int 
 Return value:  Size  Location     Type
                  3    0[BANK0 ] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       3       0       0       0       0       0       0       0
      Locals:         0       3       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       6       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___ftadd
		___ftneg
		_trunc
 This function is called by:
		_setPeriodTo
 This function uses a non-reentrant model


 *************** function _trunc *****************
 Defined at:
		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\trunc.c"
 Parameters:    Size  Location     Type
  x               3   84[COMRAM] int 
 Auto vars:     Size  Location     Type
  i               3   87[COMRAM] int 
  expon           2   90[COMRAM] int 
 Return value:  Size  Location     Type
                  3   84[COMRAM] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         3       0       0       0       0       0       0       0       0
      Locals:         5       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___altoft
		___fttol
		_frexp
 This function is called by:
		_round
 This function uses a non-reentrant model


 *************** function _frexp *****************
 Defined at:
		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\frexp.c"
 Parameters:    Size  Location     Type
  value           3    0[COMRAM] int 
  eptr            2    3[COMRAM] PTR int 
		 -> trunc@expon(2), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[COMRAM] PTR int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         5       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_trunc
 This function uses a non-reentrant model


 *************** function ___altoft *****************
 Defined at:
		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\altoft.c"
 Parameters:    Size  Location     Type
  c               4   74[COMRAM] long 
 Auto vars:     Size  Location     Type
  sign            1   83[COMRAM] unsigned char 
  exp             1   82[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  3   74[COMRAM] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0       0       0
      Totals:        10       0       0       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		_trunc
 This function uses a non-reentrant model


 *************** function ___ftneg *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftneg.c"
 Parameters:    Size  Location     Type
  f1              3   92[COMRAM] float 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3   92[COMRAM] float 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         3       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_round
 This function uses a non-reentrant model


 *************** function ___lltoft *****************
 Defined at:
		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lltoft.c"
 Parameters:    Size  Location     Type
  c               4    8[COMRAM] unsigned long 
 Auto vars:     Size  Location     Type
  exp             1   16[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  3    8[COMRAM] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		_setPeriodTo
 This function uses a non-reentrant model


 *************** function _doorSetDutyCycleTo *****************
 Defined at:
		line 71 in file "MotorFunction.c"
 Parameters:    Size  Location     Type
  Duty_cycle      3   74[COMRAM] float 
  Period          2   77[COMRAM] int 
 Auto vars:     Size  Location     Type
  PWM10BitValu    2   84[COMRAM] int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         5       0       0       0       0       0       0       0       0
      Locals:         5       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:        12       0       0       0       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___awtoft
		___ftadd
		___ftdiv
		___ftmul
		___fttol
 This function is called by:
		_motordoor_open
		_motordoor_close
 This function uses a non-reentrant model


 *************** function ___fttol *****************
 Defined at:
		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fttol.c"
 Parameters:    Size  Location     Type
  f1              3   59[COMRAM] float 
 Auto vars:     Size  Location     Type
  lval            4   69[COMRAM] unsigned long 
  exp1            1   73[COMRAM] unsigned char 
  sign1           1   68[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  4   59[COMRAM] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0       0       0
      Temps:          5       0       0       0       0       0       0       0       0
      Totals:        15       0       0       0       0       0       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_setPeriodTo
		_SetDutyCycleTo
		_doorSetDutyCycleTo
		_trunc
 This function uses a non-reentrant model


 *************** function ___ftmul *****************
 Defined at:
		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftmul.c"
 Parameters:    Size  Location     Type
  f1              3   44[COMRAM] float 
  f2              3   47[COMRAM] float 
 Auto vars:     Size  Location     Type
  f3_as_produc    3   54[COMRAM] unsigned um
  sign            1   58[COMRAM] unsigned char 
  cntr            1   57[COMRAM] unsigned char 
  exp             1   53[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  3   44[COMRAM] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0       0       0
      Totals:        15       0       0       0       0       0       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		_setPeriodTo
		_SetDutyCycleTo
		_doorSetDutyCycleTo
 This function uses a non-reentrant model


 *************** function ___ftdiv *****************
 Defined at:
		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdiv.c"
 Parameters:    Size  Location     Type
  f1              3   17[COMRAM] float 
  f2              3   20[COMRAM] float 
 Auto vars:     Size  Location     Type
  f3              3   27[COMRAM] float 
  sign            1   31[COMRAM] unsigned char 
  exp             1   30[COMRAM] unsigned char 
  cntr            1   26[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  3   17[COMRAM] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0       0       0
      Totals:        15       0       0       0       0       0       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		_setPeriodTo
		_SetDutyCycleTo
		_doorSetDutyCycleTo
 This function uses a non-reentrant model


 *************** function ___ftadd *****************
 Defined at:
		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftadd.c"
 Parameters:    Size  Location     Type
  f1              3   32[COMRAM] float 
  f2              3   35[COMRAM] float 
 Auto vars:     Size  Location     Type
  exp1            1   43[COMRAM] unsigned char 
  exp2            1   42[COMRAM] unsigned char 
  sign            1   41[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  3   32[COMRAM] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0       0       0
      Totals:        12       0       0       0       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		_setPeriodTo
		_SetDutyCycleTo
		_doorSetDutyCycleTo
		_round
 This function uses a non-reentrant model


 *************** function ___awtoft *****************
 Defined at:
		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awtoft.c"
 Parameters:    Size  Location     Type
  c               2    8[COMRAM] int 
 Auto vars:     Size  Location     Type
  sign            1   11[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  3    8[COMRAM] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         3       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		_setPeriodTo
		_SetDutyCycleTo
		_doorSetDutyCycleTo
 This function uses a non-reentrant model


 *************** function ___ftpack *****************
 Defined at:
		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
 Parameters:    Size  Location     Type
  arg             3    0[COMRAM] unsigned um
  exp             1    3[COMRAM] unsigned char 
  sign            1    4[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[COMRAM] float 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         5       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		___altoft
		___awtoft
		___ftadd
		___ftdiv
		___ftmul
		___lltoft
 This function uses a non-reentrant model


 *************** function _delay *****************
 Defined at:
		line 81 in file "MotorFunction.c"
 Parameters:    Size  Location     Type
  val             2    0[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  j               2    4[COMRAM] unsigned int 
  i               2    2[COMRAM] unsigned int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_motorlock_unlock
		_motordoor_open
		_motorlock_lock
		_motordoor_close
 This function uses a non-reentrant model


 *************** function _PWMdoor_Init *****************
 Defined at:
		line 26 in file "MotorFunction.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_motordoor_open
		_motordoor_close
 This function uses a non-reentrant model


 *************** function _lcd_write_data *****************
 Defined at:
		line 54 in file "lcd_utilities.c"
 Parameters:    Size  Location     Type
  data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  data            1    2[COMRAM] unsigned char 
  temp1           1    3[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_lcd_strobe
 This function is called by:
		_LockMotor
 This function uses a non-reentrant model


 *************** function _lcd_init *****************
 Defined at:
		line 94 in file "lcd_utilities.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2    5[COMRAM] int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_lcd_write_cmd
 This function is called by:
		_LockMotor
		_UltraSound
 This function uses a non-reentrant model


 *************** function _lcd_write_cmd *****************
 Defined at:
		line 29 in file "lcd_utilities.c"
 Parameters:    Size  Location     Type
  cmd             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  cmd             1    2[COMRAM] unsigned char 
  temp2           1    3[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_lcd_strobe
 This function is called by:
		_lcd_init
		_LockMotor
		_PIR
 This function uses a non-reentrant model


 *************** function _lcd_strobe *****************
 Defined at:
		line 84 in file "lcd_utilities.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_lcd_write_cmd
		_lcd_write_data
 This function uses a non-reentrant model


 *************** function _lcd_backlight_on *****************
 Defined at:
		line 18 in file "lcd_utilities.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_LockMotor
		_UltraSound
 This function uses a non-reentrant model


 *************** function _getkey *****************
 Defined at:
		line 17 in file "keypad_utilities.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  lookup         18    0[COMRAM] const unsigned char [18]
  keycode         1   18[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:        19       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:        19       0       0       0       0       0       0       0       0
Total ram usage:       19 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_LockMotor
 This function uses a non-reentrant model


 *************** function _delay_ms *****************
 Defined at:
		line 10 in file "delays_utilities.c"
 Parameters:    Size  Location     Type
  i               2    0[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  j               2    3[COMRAM] unsigned int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_LockMotor
		_PIR
		_UltraSound
		_buzzer_but
 This function uses a non-reentrant model


 *************** function _UART_Write *****************
 Defined at:
		line 36 in file "LockMotor.c"
 Parameters:    Size  Location     Type
  data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  data            1    0[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_LockMotor
 This function uses a non-reentrant model


 *************** function _UART_Init *****************
 Defined at:
		line 24 in file "LockMotor.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_LockMotor
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
lcd_utilities.c
		_lcd_write_data		CODE           	7334	0000	149
		_lcd_backlight_on		CODE           	6D1E	0000	5
		_lcd_write_cmd 		CODE           	7052	0000	113
		_lcd_strobe    		CODE           	6D7A	0000	35
		_lcd_init      		CODE           	70C2	0000	115

lcd_utilities.c estimated size: 417

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftadd.c
		___ftadd       		CODE           	78D8	0000	429

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftadd.c estimated size: 429

keypad_utilities.c
		_getkey        		CODE           	6E20	0000	55

keypad_utilities.c estimated size: 55

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\trunc.c
		_trunc         		CODE           	7224	0000	131

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\trunc.c estimated size: 131

LockMotor.c
		_UART_Init     		CODE           	6D5E	0000	29
		_UART_Write    		CODE           	6D3C	0000	13
		_LockMotor     		CODE           	7A84	0000	509

LockMotor.c estimated size: 551

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\round.c
		_round         		CODE           	72A6	0000	143

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\round.c estimated size: 143

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftneg.c
		___ftneg       		CODE           	6D9C	0000	37

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftneg.c estimated size: 37

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awtoft.c
		___awtoft      		CODE           	6E8C	0000	57

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awtoft.c estimated size: 57

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\altoft.c
		___altoft      		CODE           	7134	0000	121

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\altoft.c estimated size: 121

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c
		___ftpack      		CODE           	73C8	0000	175

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c estimated size: 175

newmain.c
		_main          		CODE           	6D32	0000	11

newmain.c estimated size: 11

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lltoft.c
		___lltoft      		CODE           	6F1E	0000	93

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lltoft.c estimated size: 93

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\frexp.c
		_frexp         		CODE           	71AC	0000	121

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\frexp.c estimated size: 121

shared
		__initialization		CODE           	6EC4	0000	77
		getkey@F4444   		SMALLCONST     	1005	0000	19

shared estimated size: 96

delays_utilities.c
		_delay_ms      		CODE           	6DEC	0000	53

delays_utilities.c estimated size: 53

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftmul.c
		___ftmul       		CODE           	76F0	0000	245

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftmul.c estimated size: 245

MotorFunction.c
		_delay         		CODE           	6E56	0000	55
		_setPeriodTo   		CODE           	7C80	0000	897
		_doorSetDutyCycleTo		CODE           	7476	0000	203
		_motorlock_unlock		CODE           	6FE6	0000	109
		_PWMdoor_Init  		CODE           	6D22	0000	9
		_SetDutyCycleTo		CODE           	7540	0000	203
		_motordoor_open		CODE           	6F7A	0000	109
		_PWM_Init      		CODE           	6D2A	0000	9

MotorFunction.c estimated size: 1594

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdiv.c
		___ftdiv       		CODE           	760A	0000	231

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdiv.c estimated size: 231

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fttol.c
		___fttol       		CODE           	77E4	0000	245

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fttol.c estimated size: 245

